// –î–∞–Ω–Ω—ã–µ –æ –ø–∏—Ü—Ü–∞—Ö
const pizzaData = [
    {
        name: "–ú–∞—Ä–≥–∞—Ä–∏—Ç–∞",
        description: "–¢–æ–º–∞—Ç–Ω—ã–π —Å–æ—É—Å, –º–æ—Ü–∞—Ä–µ–ª–ª–∞, –±–∞–∑–∏–ª–∏–∫",
        price: 450,
        available: "Y" // –î–æ—Å—Ç—É–ø–Ω–∞ - –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –∏ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É
    },
    {
        name: "–ü–µ–ø–ø–µ—Ä–æ–Ω–∏",
        description: "–¢–æ–º–∞—Ç–Ω—ã–π —Å–æ—É—Å, –º–æ—Ü–∞—Ä–µ–ª–ª–∞, –ø–µ–ø–ø–µ—Ä–æ–Ω–∏",
        price: 550,
        available: "Y" // –î–æ—Å—Ç—É–ø–Ω–∞ - –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –∏ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É
    },
    {
        name: "–ì–∞–≤–∞–π—Å–∫–∞—è",
        description: "–¢–æ–º–∞—Ç–Ω—ã–π —Å–æ—É—Å, –º–æ—Ü–∞—Ä–µ–ª–ª–∞, –∫—É—Ä–∏—Ü–∞, –∞–Ω–∞–Ω–∞—Å",
        price: 500,
        available: "Y" // –î–æ—Å—Ç—É–ø–Ω–∞ - –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –∏ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É
    },
    {
        name: "–ß–µ—Ç—ã—Ä–µ —Å—ã—Ä–∞",
        description: "–°–ª–∏–≤–æ—á–Ω—ã–π —Å–æ—É—Å, –º–æ—Ü–∞—Ä–µ–ª–ª–∞, –ø–∞—Ä–º–µ–∑–∞–Ω, –¥–æ—Ä –±–ª—é, —á–µ–¥–¥–µ—Ä",
        price: 600,
        available: "Y" // –î–æ—Å—Ç—É–ø–Ω–∞ - –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –∏ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É
    },
    {
        name: "–í–µ–≥–µ—Ç–∞—Ä–∏–∞–Ω—Å–∫–∞—è",
        description: "–¢–æ–º–∞—Ç–Ω—ã–π —Å–æ—É—Å, –º–æ—Ü–∞—Ä–µ–ª–ª–∞, –ø–µ—Ä–µ—Ü, –≥—Ä–∏–±—ã, –æ–ª–∏–≤–∫–∏, –∫—É–∫—É—Ä—É–∑–∞",
        price: 500,
        available: "Y" // –ù–µ–¥–æ—Å—Ç—É–ø–Ω–∞ - –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è —Å–µ—Ä–æ–π, –Ω–æ –Ω–µ–ª—å–∑—è –¥–æ–±–∞–≤–∏—Ç—å
    },
    {
        name: "–ö–∞—Ä–±–æ–Ω–∞—Ä–∞",
        description: "–°–ª–∏–≤–æ—á–Ω—ã–π —Å–æ—É—Å, –º–æ—Ü–∞—Ä–µ–ª–ª–∞, –±–µ–∫–æ–Ω, —è–π—Ü–æ, –ø–∞—Ä–º–µ–∑–∞–Ω",
        price: 580,
        available: "H" // –°–∫—Ä—ã—Ç–∞ - –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –≤ –º–µ–Ω—é –≤–æ–æ–±—â–µ
    },
    {
        name: "–ú—è—Å–Ω–∞—è",
        description: "–¢–æ–º–∞—Ç–Ω—ã–π —Å–æ—É—Å, –º–æ—Ü–∞—Ä–µ–ª–ª–∞, –ø–µ–ø–ø–µ—Ä–æ–Ω–∏, –≤–µ—Ç—á–∏–Ω–∞, –±–µ–∫–æ–Ω, –∫—É—Ä–∏—Ü–∞",
        price: 650,
        available: "Y" // –î–æ—Å—Ç—É–ø–Ω–∞ - –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –∏ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É
    },
    {
        name: "–¢—Ä—é—Ñ–µ–ª—å–Ω–∞—è",
        description: "–°–ª–∏–≤–æ—á–Ω—ã–π —Å–æ—É—Å, –º–æ—Ü–∞—Ä–µ–ª–ª–∞, —Ç—Ä—é—Ñ–µ–ª—å–Ω–æ–µ –º–∞—Å–ª–æ, –≥—Ä–∏–±—ã, –ø–∞—Ä–º–µ–∑–∞–Ω",
        price: 750,
        available: "N" // –°–∫—Ä—ã—Ç–∞ - –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –≤ –º–µ–Ω—é –≤–æ–æ–±—â–µ
    },
    {
        name: "–î–∏–∞–±–ª–æ",
        description: "–û—Å—Ç—Ä—ã–π —Ç–æ–º–∞—Ç–Ω—ã–π —Å–æ—É—Å, –º–æ—Ü–∞—Ä–µ–ª–ª–∞, —Å–∞–ª—è–º–∏, –ø–µ—Ä–µ—Ü —Ö–∞–ª–∞–ø–µ–Ω—å–æ, —á–∏–ª–∏",
        price: 570,
        available: "H" // –°–∫—Ä—ã—Ç–∞ - –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –≤ –º–µ–Ω—é –≤–æ–æ–±—â–µ
    }
];

// –ü–∏—Ü—Ü—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –º–æ–≥—É—Ç –±—ã—Ç—å –ø–∏—Ü—Ü–µ–π –¥–Ω—è
const excludedFromDaily = ["–ú–∞—Ä–≥–∞—Ä–∏—Ç–∞", "–ß–µ—Ç—ã—Ä–µ —Å—ã—Ä–∞", "–í–µ–≥–µ—Ç–∞—Ä–∏–∞–Ω—Å–∫–∞—è"];

// –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—É—é –ø–∏—Ü—Ü—É –¥–Ω—è –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö, –∏—Å–∫–ª—é—á–∞—è –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ
function getPizzaOfTheDay() {
    const availablePizzas = pizzaData.filter(pizza => 
        pizza.available === "Y" && !excludedFromDaily.includes(pizza.name)
    );
    
    if (availablePizzas.length === 0) return null;
    
    const randomIndex = Math.floor(Math.random() * availablePizzas.length);
    return availablePizzas[randomIndex];
}

const pizzaOfTheDay = getPizzaOfTheDay();

// –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç prices –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ (—Ç–æ–ª—å–∫–æ –¥–ª—è –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–∏—Ü—Ü)
const prices = {};
pizzaData.forEach(pizza => {
    if (pizza.available === "Y") {
        // –î–ª—è –ø–∏—Ü—Ü—ã –¥–Ω—è –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ü–µ–Ω—É —Å–æ —Å–∫–∏–¥–∫–æ–π
        if (pizzaOfTheDay && pizza.name === pizzaOfTheDay.name) {
            prices[pizza.name] = Math.round(pizza.price * 0.9);
        } else {
            prices[pizza.name] = pizza.price;
        }
    }
});

const cart = {};
const notificationArea = document.getElementById('notification-area');
const cartItemsEl = document.getElementById('cart-items');
const totalPriceEl = document.getElementById('total-price');
const orderInfoEl = document.getElementById('order-info');
const clearBtn = document.getElementById('clear-cart');
const orderBtn = document.getElementById('place-order');
const menuContainer = document.getElementById('menu-container');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä—Ç–æ—á–µ–∫ –º–µ–Ω—é
function createMenuCards() {
    menuContainer.innerHTML = ''; // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    
    pizzaData.forEach(pizza => {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–∏—Ü—Ü—ã —Å available: "Y" –∏–ª–∏ "N"
        if (pizza.available === "Y" || pizza.available === "N") {
            const isPizzaOfTheDay = pizzaOfTheDay && pizza.name === pizzaOfTheDay.name;
            const discountedPrice = isPizzaOfTheDay ? Math.round(pizza.price * 0.9) : pizza.price;
            
            const card = document.createElement('div');
            card.className = pizza.available === "Y" ? 
                (isPizzaOfTheDay ? 'card pizza-of-the-day' : 'card') : 
                'card unavailable';
            
            let priceHTML = '';
            if (isPizzaOfTheDay) {
                priceHTML = `
                    <div class="price">
                        <span class="discount-price">${discountedPrice} ‚ÇΩ</span>
                        <span class="original-price">${pizza.price} ‚ÇΩ</span>
                    </div>
                    <div class="discount-text">–°–∫–∏–¥–∫–∞ 10%</div>
                `;
            } else {
                priceHTML = `<div class="price">${pizza.price} ‚ÇΩ</div>`;
            }
            
            card.innerHTML = `
                ${isPizzaOfTheDay ? '<div class="pizza-of-the-day-badge">–ü–∏—Ü—Ü–∞ –¥–Ω—è!</div>' : ''}
                <h3 class="pizza-name">${pizza.name}${isPizzaOfTheDay ? ' (–ø–∏—Ü—Ü–∞ –¥–Ω—è)' : ''}</h3>
                <p class="pizza-description">${pizza.description}${isPizzaOfTheDay ? ' –°–∫–∏–¥–∫–∞ 10%' : ''}</p>
                ${priceHTML}
                <button class="btn add-to-cart-btn" ${pizza.available === "N" ? 'disabled' : ''}>
                    ${pizza.available === "Y" ? '–î–æ–±–∞–≤–∏—Ç—å' : '–ù–µ –¥–æ—Å—Ç—É–ø–Ω–æ'}
                </button>
            `;
            menuContainer.appendChild(card);
        }
        // –ü–∏—Ü—Ü—ã —Å available: "H" –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –≤–æ–æ–±—â–µ
    });

    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –∫–Ω–æ–ø–æ–∫ "–î–æ–±–∞–≤–∏—Ç—å" (—Ç–æ–ª—å–∫–æ –¥–ª—è –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–∏—Ü—Ü)
    document.querySelectorAll('.add-to-cart-btn:not([disabled])').forEach(btn => {
        btn.addEventListener('click', function() {
            // –ù–∞—Ö–æ–¥–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–∏—Ü—Ü—ã —á–µ—Ä–µ–∑ —Å–æ—Å–µ–¥–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã
            const card = this.closest('.card');
            const productName = card.querySelector('.pizza-name').textContent.replace(' (–ø–∏—Ü—Ü–∞ –¥–Ω—è)', '').trim();
            
            // –ù–∞—Ö–æ–¥–∏–º —Ü–µ–Ω—É —á–µ—Ä–µ–∑ —Å–æ—Å–µ–¥–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã
            let productPrice;
            const priceElement = card.querySelector('.discount-price') || card.querySelector('.price');
            if (priceElement) {
                productPrice = parseInt(priceElement.textContent.replace(' ‚ÇΩ', ''));
            } else {
                // –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ —Ü–µ–Ω—É, –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –æ–±—ä–µ–∫—Ç–∞ prices
                productPrice = prices[productName];
            }
            
            // –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É
            cart[productName] = (cart[productName] || 0) + 1;
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            showNotification(`–î–æ–±–∞–≤–ª–µ–Ω–æ: ${productName}`, 'info');
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ—Ä–∑–∏–Ω—É
            updateCart();
        });
    });
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω—é
createMenuCards();

// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–∏—Ü—Ü–µ –¥–Ω—è
if (pizzaOfTheDay) {
    showNotification(`üçï –ü–∏—Ü—Ü–∞ –¥–Ω—è: ${pizzaOfTheDay.name} —Å–æ —Å–∫–∏–¥–∫–æ–π 10%!`, 'info');
}

// –û—á–∏—Å—Ç–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã
clearBtn.addEventListener('click', function() {
    for (const key in cart) {
        delete cart[key];
    }
    updateCart();
    showNotification('–ö–æ—Ä–∑–∏–Ω–∞ –æ—á–∏—â–µ–Ω–∞', 'info');
    orderInfoEl.style.display = 'none';
});

// –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞
orderBtn.addEventListener('click', function() {
    const name = document.getElementById('customer-name').value;
    const email = document.getElementById('customer-email').value;
    
    if (!name || !email) {
        showNotification('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è!', 'error');
        return;
    }
    
    if (Object.keys(cart).length === 0) {
        showNotification('–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞!', 'error');
        return;
    }
    
    let orderDetails = `
        <h3>–ó–∞–∫–∞–∑ –ø–∏—Ü—Ü—ã –æ—Ñ–æ—Ä–º–ª–µ–Ω!</h3>
        <p><strong>–ò–º—è:</strong> ${name}</p>
        <p><strong>Email:</strong> ${email}</p>
        <p><strong>–í—ã–±—Ä–∞–Ω–Ω—ã–µ –ø–∏—Ü—Ü—ã:</strong></p>
        <ul>
    `;
    
    for (const [name, quantity] of Object.entries(cart)) {
        orderDetails += `<li>${name} - ${quantity} —à—Ç. (${prices[name] * quantity} ‚ÇΩ)</li>`;
    }
    
    orderDetails += `
        </ul>
        <p><strong>–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å:</strong> ${calculateTotal()} ‚ÇΩ</p>
        <p>–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –∑–∞–∫–∞–∑! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.</p>
    `;
    
    orderInfoEl.innerHTML = orderDetails;
    orderInfoEl.style.display = 'block';
    showNotification('–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω!', 'info');
});

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã
function updateCart() {
    if (Object.keys(cart).length === 0) {
        cartItemsEl.innerHTML = '<p>–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞</p>';
        totalPriceEl.textContent = '–ò—Ç–æ–≥–æ: 0 ‚ÇΩ';
        return;
    }
    
    let html = '';
    for (const [name, quantity] of Object.entries(cart)) {
        html += `
        <div class="cart-item">
            <span>${name}</span>
            <div class="cart-controls">
                <button class="quantity-btn minus">-</button>
                <span>${quantity}</span>
                <button class="quantity-btn plus">+</button>
            </div>
        </div>
        `;
    }
    cartItemsEl.innerHTML = html;
    totalPriceEl.textContent = `–ò—Ç–æ–≥–æ: ${calculateTotal()} ‚ÇΩ`;
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ +/-
    document.querySelectorAll('.minus').forEach((btn, index) => {
        btn.addEventListener('click', function() {
            const name = Object.keys(cart)[index];
            if (cart[name] > 1) {
                cart[name]--;
            } else {
                delete cart[name];
            }
            updateCart();
            showNotification(`–£–º–µ–Ω—å—à–µ–Ω–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: ${name}`, 'info');
        });
    });
    
    document.querySelectorAll('.plus').forEach((btn, index) => {
        btn.addEventListener('click', function() {
            const name = Object.keys(cart)[index];
            cart[name]++;
            updateCart();
            showNotification(`–£–≤–µ–ª–∏—á–µ–Ω–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: ${name}`, 'info');
        });
    });
}

// –†–∞—Å—á–µ—Ç –æ–±—â–µ–π —Å—É–º–º—ã
function calculateTotal() {
    let total = 0;
    for (const [name, quantity] of Object.entries(cart)) {
        total += prices[name] * quantity;
    }
    return total;
}

// –ü–æ–∫–∞–∑–∞—Ç—å –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–∑–∞–º–µ–Ω—è–µ—Ç –ø—Ä–µ–¥—ã–¥—É—â–µ–µ)
function showNotification(text, type = 'info') {
    notificationArea.innerHTML = '';
    const notification = document.createElement('div');
    notification.className = `notification ${type}-notification`;
    notification.textContent = text;
    notificationArea.appendChild(notification);
}